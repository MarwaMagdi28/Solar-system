name: solar system workflow
on: 
    workflow_dispatch:
    push:
        branches:
            - main
            - 'Feature/*'
 
env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        name: unit testing
        strategy:
          matrix:
            nodejs-version: [18, 19, 20]
            operating-system: [ubuntu-latest, macos-latest]
            exclude:
              - nodejs-version: 18
                operating-system: macos-latest
        runs-on: ${{ matrix.operating-system }}
        steps:
            - name: checkout
              uses: actions/checkout@v4
            
            - name: setup node js v18
              uses: actions/setup-node@v3
              with:
                node-version: ${{ matrix.nodejs-version }}

            - name: install depend.
              run: npm install

            - name: unit testing
              id: nodejs-unit-testing-step
              run: npm test

            - name: archive test result
              if: failure() && (steps.nodejs-unit-testing-step.outcome == 'failure' || steps.nodejs-unit-testing-step.outcome == 'success')
              #if: always()
              uses: actions/upload-artifact@v3
              with:
                name: mocha-test-result
                path: test-results.xml

    code-coverage:
      name: code coverage
      runs-on: ubuntu-latest
      needs: unit-testing
      steps:
          - name: checkout
            uses: actions/checkout@v4
                      
          - name: setup node js v18
            uses: actions/setup-node@v3
            with:
              node-version: 18
          
          - name: install depend.
            run: npm install
          
          - name: check code coverage
            continue-on-error: true
            run: npm run coverage
          
          - name: archive test result
            uses: actions/upload-artifact@v3
            with:
              name: code-coverage-result
              path: coverage
              retention-days: 
      
    docker:
      name: containerization
      needs: [unit-testing, code-coverage] 
      runs-on: ubuntu-latest

      steps:
        - name: checkout
          uses: actions/checkout@v4

        - name: docker hub login
          uses: docker/login-action@v2
          with:
            username: ${{ vars.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Build and push
          uses: docker/build-push-action@v5
          with:
            context: .
            push: false
            tags: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}

        - name: docker image test
          run: |
                docker images
                docker run --name solar-system-app -d \
                      -p 3000:3000 \
                      -e MONGO_URI=$MONGO_URI \
                      -e MONGO_USERNAME=$MONGO_USERNAME \
                      -e MONGO_PASSWORD=$MONGO_PASSWORD \
                      ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}
                export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
                echo $IP
                docker inspect solar-system-app | grep i IPAddress

                echo testing image URL using wget
                wget -q -o - 127.0.0.1:3000/live | grep live
      
        - name: Build and push
          uses: docker/build-push-action@v5
          with:
            context: .
            push: true
            tags: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}

